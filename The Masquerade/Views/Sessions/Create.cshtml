@model The_Masquerade.Models.Session

@{
    ViewBag.Title = "New Session";
}

<h2>Create New Session</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
        <div class="div-center">
            <hr />
            <h3>Main</h3>
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @{TempData["Chronicle_id"] = ViewBag.Chronicle_id;}
            <div class="form-group">
                @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Notes, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextAreaFor(model => model.Notes, htmlAttributes: new { @class = "form-control closing-text" })
                    @Html.ValidationMessageFor(model => model.Notes, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Extra_Notes, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextAreaFor(model => model.Extra_Notes, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Extra_Notes, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Session_Player, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.Session_Player, (SelectList)(ViewBag.Players), htmlAttributes: new { @class = "form-control" })
                </div>
            </div>
            <hr />
            <h3>Chararcters</h3>
            @for (int i = 0; i < Model.Session_Details.Count; i++)
            {
                <h4>@Model.Session_Details.ToList()[i].Character.Name</h4>
                @Html.HiddenFor(m => Model.Session_Details.ToList()[i].Character_id);
                <div class="form-group">
                    @Html.LabelFor(m => Model.Session_Details.ToList()[i].Closing_Situation,
                    htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextAreaFor(m => Model.Session_Details.ToList()[i].Closing_Situation,
                        htmlAttributes: new { @class = "form-control closing-text" })
                        @Html.ValidationMessageFor(m => Model.Session_Details.ToList()[i].Closing_Situation,
                        "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => Model.Session_Details.ToList()[i].Experience_Points,
                    htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(m => Model.Session_Details.ToList()[i].Experience_Points,
                     new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(m => Model.Session_Details.ToList()[i].Experience_Points,
                        "", new { @class = "text-danger" })
                    </div>
                </div>
            }

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index", new { id = ViewBag.Chronicle_id })
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
